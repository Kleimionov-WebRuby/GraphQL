import { useQuery } from '@apollo/client';

import { MOVIES, IMoviesData } from 'api/movies/fetchMovies';
import MovieItem from 'components/Movie';

// Can use Autogenerated types with Apollo CLI

// npm install -g apollo
/**
 * @category scripts for package.json
 * @param endpoint
 * @example "codegen:schema": "npx apollo client:download-schema --endpoint=http://localhost:9000/api",
 */

/**
 * @category scripts for package.json
 * @param localSchemaFile
 * @param includes
 * @param target
 * @return - generate folders with types (__generated__)
 */
// @example "codegen:generate": "npx apollo client:codegen --localSchemaFile=schema.json --includes=src/**/*.tsx --target=typescript"

// https://coursehunter.net/course/tinyhouse-fullstack-react-master-klass-s-typescript-i-graphql?lesson=63

const Movies = () => {
  const { loading, error, data, refetch } = useQuery<IMoviesData>(MOVIES);

  if (loading) return <>Loading...</>;
  if (error) return <>{error.message}</>;

  return (
    <ul>
      {data?.movies.map((element) => (
        <MovieItem key={element.id} refetch={refetch} {...element} />
      ))}
    </ul>
  );
};

export default Movies;
